c
AssignedNotifier.where(record_id: current_user.id)
AssignedNotifier
c
AssignedNotifier.first
 AssignedNotifier.all
@notifications =  AssignedNotifier.where(record_id: current_user.id)
c
@article.client_user.user_id
c
params
c
@article
c
 @client = Client.find_by(sub_domain: params[:client_id])
@client
client
c
params[:client_id]
params[:client_i]
params[:client_is
 @client = Client.find_by(sub_domain: params[:cient_id])
@client
params
c
params
c
@client_user
c
params
c
params
c
params
c
params
c
client_user&.client == @client
client_user
c
Article.count
article2
Article.all
article
      post articles_path(client_id: client.sub_domain), params: {
        article: {
          title: "Article_Title",
          category_id: category.id,
          body: 'Body'
        }}
Article.all
article1
Article.all
Article
Article.first
c
Article.all
article1
article
atcile
c
Client.all
c
response
c
response
client_articles_path
client
c
article3
c
article1.id
response
c
article1
c
client.id
article1
c
response
post article_approve_article_path(client_id: client.sub_domain, article_id: article1.id)
expect(article1.status).to eq(true)
c
Like.all
response
c
response
c
response
c
v
ClientUser.first
ClientUser.all
client_user.user
client_user
c
ClientUser.first
c
ClientUser.all
c
ClientUser.f
ClientUser.user.name
c
ClientUser.first
client_user
c
ClientUser.first
c
response
c
ClientUser.all
c
ClientUser.all
ClentUser.all
c
response
c
client.slug
client.sub_domain
response
c
delete client_user_path(client_id: 1,id: client_user.id)
c
delete client_user_path(client_id: client.sub_domain,id: client_user.id)
c
delete client_user_path(client_id: client.sub_domain,id: client_user.id)
c
delete client_user_path(client_id: client.sub_domain,id: client_user.id)
ClientUser.find(client_user.id)
c
ClientUser.all
c
client
Client.all
c
Client.all
c
Client.all
c
response.request
response
c
response
client_users_path(client_id: client.sub_domain)
c
params
c
@client = Client.find_by(sub_domain: params[:client_id])
params
parsms
c
Client.all
client1
c
client1
c
client1
c
client1
c
client1
c
Client.all
c
Client.all
post update_sub_domain_client_path(id: client1.id), params: {sub_domain: "sub_domain_edit",id:client1.id}
client1 = FactoryBot.create(:client)
client
post update_sub_domain_client_path(id: client.id), params: {sub_domain: "sub_domain_edit",id:client.id}
    def update_sub_domain 
        # byebug
        @client.update(slug: params[:sub_domain])
        if @client.update(sub_domain: params[:sub_domain]) 
            flash[:alert] = 'Sub Domain Updated'
            redirect_to articles_path(client_id: @client.sub_domain)
        end
    end
client
post update_sub_domain_client_path(id: client.id), params: {sub_domain: "sub_domain_edit",id:client.id}
post update_sub_domain_client_path(id: client.id), params: {sub_domain: "sub_domain_edit"}
c
post client_users_path(client_id: client.sub_domain), params: {client_user: {name:"Name",email:"client_user@email.com",password:"password"}}
c
post new_client_user_path(client_id: client.sub_domain), params: {client_user: {name:"Name",email:"client_user@email.com",password:"password"}}
c
 get new_client_user_path(client_id: client.sub_domain)
c
get edit_sub_domain_client_path(id: client.id)
c
 get edit_sub_domain_client_path(id: client.id)
cc
c
 delete client_path(id: client.id)
client.id
client
delete client_path(id: client)
delete client_path(id: client.sub_domain)
client.id
delete client_path(id: client.id)
c
put clients_path(id: client.id) , params: {client: {name: "Updated_client",sub_domain:"updated_sub_domain"}}
put clients_path(id: client.id) , params: {client: {name: "Updated_client",sub_domain:"updated_sub_domain"}
patch clients_path(id: client.id) , params: {client: {name: "Updated_client",sub_domain:"updated_sub_domain"}}
c
put clients_path(id: client)
patch clients_path(id: client)
c
get edit_client_path(id:client)
c
Like.all
c
Like
c
Client.all
Article.all
User.all
Like.all
      post like_article_path(client.sub_domain, article.id)
user
c
current_user
Like.all
post "/#{client.sub_domain}/articles/#{article.id}/like"
c
post "/#{client.sub_domain}/articles/#{article.id}/like"
"/#{client.sub_domain}/articles/#{article.id}"
Like.all
Like.where(user: user, article: article)
 post "/#{client.sub_domain}/articles/#{article.id}"
post "/#{client.id}/articles/#{article.id}"
c
Like.find_by(user_id: user.id, article_id: article.id).present?
@like = user.likes.create(article: article,status: true) 
@like = @user.likes.create(article: @article,status: true) 
Like.where(user_id: user.id, article_id: article.id)
Like.find_by(user_id: user.id, article_id: article.id).present?
post like_article_path(client_id: client.sub_domain, id: article.id)
user
client
article
c
article
aticle
c
post like_article_path(client.sub_domain, article.id)
Like.all
Like.find_by(user: user, article: article)
c
@article.errors.full_messages
c
client_user_id= current_user.id
client_user_id: current_user.id
@article.errors.full_messages
c
params
